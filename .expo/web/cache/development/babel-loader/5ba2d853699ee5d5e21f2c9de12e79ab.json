{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\Albums.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Photos from \"../screens/Photos\";\nimport axios from 'axios';\n\nvar Albums = function Albums(props) {\n  var userId = props.route.params.userId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showPhotos = _useState6[0],\n      setShowPhotos = _useState6[1];\n\n  React.useEffect(function () {\n    props.navigation.setOptions({\n      headerTitle: 'ALBUMS'\n    });\n  }, []);\n  useEffect(function () {\n    getuser();\n  }, []);\n\n  var getuser = function getuser() {\n    axios.get(\"http://jsonplaceholder.typicode.com/albums?userId=\" + userId).then(function (response) {\n      return setUser(response.data);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n  };\n\n  if (loading) return React.createElement(ActivityIndicator, {\n    size: 'large',\n    color: 'red',\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, user.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        marginBottom: 30\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setShowPhotos(!showPhotos);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \"\\\"userId\\\": \", item.userId), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"\\\"id\\\": \", item.id), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"\\\"title\\\": \", item.title)), showPhotos && React.createElement(Photos, {\n      albumId: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nexport default Albums;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/Albums.tsx"],"names":["React","useEffect","useState","Photos","axios","Albums","props","userId","route","params","user","setUser","loading","setLoading","showPhotos","setShowPhotos","navigation","setOptions","headerTitle","getuser","get","then","response","data","catch","e","console","log","setTimeout","marginTop","marginLeft","map","item","index","marginBottom","fontSize","id","title","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Text, View, TouchableOpacity, ScrollView, Image } from 'react-native'\r\nimport Photos from '../screens/Photos'\r\nimport axios from 'axios'\r\n\r\nconst Albums = (props: any) => {\r\n    var userId = props.route.params.userId\r\n    const [user, setUser] = useState<{ id: number; userId: number; title: string; completed: string }[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showPhotos, setShowPhotos] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        props.navigation.setOptions({ headerTitle: 'ALBUMS' })\r\n    }, [])\r\n    useEffect(() => {\r\n        getuser()\r\n\r\n    }, [])\r\n\r\n\r\n    const getuser = () => {\r\n\r\n        axios \r\n        .get(\"http://jsonplaceholder.typicode.com/albums?userId=\" + userId)\r\n            .then(response =>setUser(response.data))\r\n            .catch(e => console.log(e))\r\n            setTimeout(function () { setLoading(false) }, 500);\r\n    }\r\n\r\n\r\n    if (loading)\r\n        return <ActivityIndicator size={'large'} color={'red'} style={{ marginTop: 30 }} />\r\n    return (\r\n        <ScrollView style={{ marginLeft: 10 }}>\r\n            {  user.map((item, index) => {\r\n                return (\r\n                    <View style={{ marginBottom: 30 }} key={index}>\r\n                        <TouchableOpacity onPress={() => { setShowPhotos(!showPhotos)}}>\r\n                            <Text style={{ fontSize: 20 }}>\"userId\": {item.userId}</Text>\r\n                            <Text style={{ fontSize: 20 }}>\"id\": {item.id}</Text>\r\n                            <Text style={{ fontSize: 20 }}>\"title\": {item.title}</Text>\r\n                        </TouchableOpacity>\r\n                        {\r\n                            showPhotos &&\r\n                            <Photos albumId={item.id}/>\r\n                            \r\n                        }\r\n                    </View>)\r\n            })}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Albums\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}