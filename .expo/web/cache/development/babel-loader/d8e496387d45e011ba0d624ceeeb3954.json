{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\TabTwoScreen.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function TabTwoScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      secondModalVısıble = _useState8[0],\n      setSecondModalVısıble = _useState8[1];\n\n  var goToTabOneScreen = function goToTabOneScreen(name, url) {\n    setVisible(false);\n    props.navigation.navigate('Prfsc', {\n      name: name,\n      url: url\n    });\n  };\n\n  var login = function login() {\n    setVisible(true);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setVisible(true);\n    },\n    style: {\n      marginTop: 20,\n      borderRadius: 10,\n      backgroundColor: 'lightblue',\n      height: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '70%',\n      marginLeft: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"User Information\"))), React.createElement(Modal, {\n    visible: visible,\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      return setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#00000055',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 150,\n      height: 570,\n      flex: 1,\n      borderRadius: 10,\n      paddingVertical: 10,\n      backgroundColor: '#fff',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 20,\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"NAME\"), React.createElement(TextInput, {\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    style: {\n      color: '#3f734d',\n      backgroundColor: 'white',\n      fontSize: 20,\n      borderWidth: 1,\n      width: '70%',\n      padding: 3,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('TabOneScreen');\n    },\n    style: {\n      marginTop: 20,\n      borderRadius: 10,\n      backgroundColor: 'blue',\n      height: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '70%',\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"go to profile\")))))), React.createElement(Modal, {\n    visible: secondModalVısıble,\n    onRequestClose: function onRequestClose() {\n      return setSecondModalVısıble(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'red',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  urll: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/TabTwoScreen.tsx"],"names":["React","useState","TabTwoScreen","props","name","setName","url","setUrl","visible","setVisible","secondModalVısıble","setSecondModalVısıble","goToTabOneScreen","navigation","navigate","login","marginTop","borderRadius","backgroundColor","height","justifyContent","alignItems","width","marginLeft","flex","flexDirection","paddingVertical","marginBottom","fontSize","text","color","borderWidth","padding","styles","StyleSheet","create","urll"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TextInput, TouchableOpacity, Alert, Modal, Button, ScrollView, SafeAreaView, Text, View } from 'react-native';\r\n\r\n\r\nexport default function TabTwoScreen(props) {\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [url, setUrl] = useState()\r\n  const [visible, setVisible] = useState(false)\r\n  const [secondModalVısıble, setSecondModalVısıble] = useState(false)\r\n\r\n  const goToTabOneScreen = (name: string, url: string) => {\r\n    setVisible(false)\r\n    // setSecondModalVısıble(true)\r\n    props.navigation.navigate('Prfsc', { name: name, url: url })\r\n  }\r\n\r\n  const login = () => {\r\n    setVisible(true)\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <View >\r\n        <TouchableOpacity onPress={() => setVisible(true)} style={{ marginTop: 20, borderRadius: 10, backgroundColor: 'lightblue', height: 40, justifyContent: 'center', alignItems: 'center', width: '70%', marginLeft: 60 }}>\r\n          <Text>User Information</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Modal visible={visible} transparent onRequestClose={() => setVisible(false)}>\r\n        <View style={{ flex: 1, backgroundColor: '#00000055', alignItems: 'center', justifyContent: 'center' }}>\r\n         \r\n          <View style={{ flexDirection: 'row',  }}>\r\n            <View style={{ marginTop:150,height:570,flex: 1, borderRadius:10,paddingVertical:10, backgroundColor:'#fff', alignItems:'center' }}>\r\n              <Text style={{ marginBottom: 20, fontSize: 20 }}>NAME</Text>\r\n              <TextInput value={name} onChangeText={(text) => setName(text)} style={{ color: '#3f734d', backgroundColor: 'white', fontSize: 20, borderWidth: 1, width: '70%', padding: 3, marginLeft: 20 }} />\r\n              <TouchableOpacity onPress={() => props.navigation.navigate('TabOneScreen')} style={{ marginTop: 20, borderRadius: 10, backgroundColor: 'blue', height: 40, justifyContent: 'center', alignItems: 'center', width: '70%', marginLeft: 20 }}>\r\n                <Text>go to profile</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n\r\n        </View>\r\n\r\n      </Modal>\r\n      <Modal visible={secondModalVısıble} onRequestClose={() => setSecondModalVısıble(false)}>\r\n        <View style={{ backgroundColor: 'red', flex: 1 }}></View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  urll: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}