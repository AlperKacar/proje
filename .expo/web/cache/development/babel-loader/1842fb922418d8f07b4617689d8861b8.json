{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\Photos.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Photos = function Photos(props) {\n  var albumId = props.route.params.albumId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      album = _useState2[0],\n      setalbum = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  React.useEffect(function () {\n    props.navigation.setOptions({\n      headerTitle: 'PHOTOS'\n    });\n  }, []);\n  useEffect(function () {\n    getalbum();\n  }, []);\n\n  var getalbum = function getalbum() {\n    fetch(\"http://jsonplaceholder.typicode.com/photos?albumId=\" + albumId).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return handleResponse1(json);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var handleResponse1 = function handleResponse1(response) {\n    var namealbum = response.map(function (item1, index) {\n      return {\n        id: item1.id,\n        title: item1.title,\n        albumId: item1.albumId,\n        url: item1.url,\n        thumbnailUrl: item1.thumbnailUrl\n      };\n    });\n    setalbum(response);\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n    console.log(namealbum);\n  };\n\n  if (loading) return React.createElement(ActivityIndicator, {\n    size: 'large',\n    color: 'red',\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, album.map(function (item1, index) {\n    return React.createElement(View, {\n      style: {\n        marginBottom: 30\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"\\\"albumId\\\": \", item1.albumId), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"\\\"id\\\": \", item1.id), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"\\\"title\\\": \", item1.title), React.createElement(Image, {\n      style: {\n        width: 600,\n        height: 600\n      },\n      source: {\n        uri: item1.url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }));\n  }));\n};\n\nexport default Photos;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/Photos.tsx"],"names":["React","useEffect","useState","Photos","props","albumId","route","params","album","setalbum","loading","setLoading","navigation","setOptions","headerTitle","getalbum","fetch","then","response","json","handleResponse1","catch","e","console","log","namealbum","map","item1","index","id","title","url","thumbnailUrl","setTimeout","marginTop","marginLeft","marginBottom","fontSize","width","height","uri","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Text, View, TouchableOpacity, ScrollView, Image } from 'react-native'\r\n\r\nconst Photos = (props: any) => {\r\n    var albumId = props.route.params.albumId\r\n    const [album, setalbum] = useState<{ id: number; albumId: number; title: string; completed: string; url: string }[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    React.useEffect(() => {\r\n        props.navigation.setOptions({ headerTitle: 'PHOTOS' })\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        getalbum()\r\n    }, [])\r\n\r\n    const getalbum = () => {\r\n\r\n        fetch(\"http://jsonplaceholder.typicode.com/photos?albumId=\" + albumId)\r\n            .then(response => response.json())\r\n            .then(json => handleResponse1(json))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const handleResponse1 = (response: any[]) => {\r\n        var namealbum = response.map((item1, index) => {\r\n            return {\r\n                id: item1.id, title: item1.title, albumId: item1.albumId, url: item1.url, thumbnailUrl: item1.thumbnailUrl\r\n            }\r\n        })\r\n        setalbum(response)\r\n        setTimeout(function () { setLoading(false) }, 500);\r\n        console.log(namealbum);\r\n    }\r\n\r\n\r\n    if (loading)\r\n        return <ActivityIndicator size={'large'} color={'red'} style={{ marginTop: 30 }} />\r\n    return (\r\n        <ScrollView style={{ marginLeft: 10 }}>\r\n            {  album.map((item1, index) => {\r\n                return (\r\n                    <View style={{ marginBottom: 30 }} key={index}>\r\n                        <Text style={{ fontSize: 20 }}>\"albumId\": {item1.albumId}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"id\": {item1.id}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"title\": {item1.title}</Text>\r\n                        <Image style={{ width: 600, height: 600 }}\r\n                            source={{ uri: item1.url }}>\r\n                        </Image>\r\n                    </View>)\r\n            }\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Photos\r\n\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}