{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\Comments.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar Comments = function Comments(params) {\n  var postId = params.postId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setpost = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    getpost();\n    params.navigation.setOptions({\n      headerTitle: 'POSTS'\n    });\n  }, []);\n\n  var getpost = function getpost() {\n    fetch(\"http://jsonplaceholder.typicode.com/comments?postId=\" + postId).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return handleResponse1(json);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var handleResponse1 = function handleResponse1(response) {\n    var namepost = response.map(function (item, index) {\n      return {\n        id: item.id,\n        name: item.name,\n        body: item.body,\n        postId: item.postId\n      };\n    });\n    setpost(response);\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n    console.log(namepost);\n  };\n\n  if (loading) return React.createElement(ActivityIndicator, {\n    size: 'large',\n    color: 'red',\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, post.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        marginBottom: 30\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 56\n      }\n    }, \"\\\"postId\\\":\"), item.postId), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 56\n      }\n    }, \"\\\"id\\\":\"), item.id), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 56\n      }\n    }, \"\\\"name\\\": \"), item.name), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 56\n      }\n    }, \"\\\"body\\\": \"), item.body), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 56\n      }\n    }, \"\\\"email\\\":\"), item.email));\n  }));\n};\n\nexport default Comments;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/Comments.tsx"],"names":["React","useEffect","useState","Comments","params","postId","post","setpost","loading","setLoading","getpost","navigation","setOptions","headerTitle","fetch","then","response","json","handleResponse1","catch","e","console","log","namepost","map","item","index","id","name","body","setTimeout","marginTop","marginLeft","marginBottom","fontSize","color","email","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Text, View, ScrollView } from 'react-native'\r\n\r\nconst Comments = (params: any) => {\r\n    const postId = params.postId\r\n    const [post, setpost] = useState<{ id: number; name: string; body: string; email: string; postId: number; }[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getpost()\r\n        params.navigation.setOptions({ headerTitle: 'POSTS' })\r\n    }, [])\r\n\r\n\r\n    const getpost = () => {\r\n\r\n        fetch(\"http://jsonplaceholder.typicode.com/comments?postId=\" + postId)\r\n            .then(response => response.json())\r\n            .then(json => handleResponse1(json))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const handleResponse1 = (response: any[]) => {\r\n        var namepost = response.map((item, index) => {\r\n            return {\r\n                id: item.id, name: item.name, body: item.body, postId: item.postId\r\n            }\r\n        })\r\n        setpost(response)\r\n        setTimeout(function () { setLoading(false) }, 500);\r\n        console.log(namepost);\r\n    }\r\n\r\n\r\n    if (loading)\r\n        return <ActivityIndicator size={'large'} color={'red'} style={{ marginTop: 30 }} />\r\n\r\n    return (\r\n        <ScrollView style={{ marginLeft: 10 }}>\r\n            {  post.map((item, index) => {\r\n                return (\r\n                    <View style={{ marginBottom: 30 }} key={index}>\r\n                        <Text style={{ fontSize: 20 }}><span style={{color:'red'}}>\"postId\":</span>{item.postId}</Text>\r\n                        <Text style={{ fontSize: 20 }}><span style={{color:'red'}}>\"id\":</span>{item.id}</Text>\r\n                        <Text style={{ fontSize: 20 }}><span style={{color:'red'}}>\"name\": </span>{item.name}</Text>\r\n                        <Text style={{ fontSize: 20 }}><span style={{color:'red'}}>\"body\": </span>{item.body}</Text>\r\n                        <Text style={{ fontSize: 20 }}><span style={{color:'red'}}>\"email\":</span>{item.email}</Text>\r\n\r\n                    </View>)\r\n            }\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}