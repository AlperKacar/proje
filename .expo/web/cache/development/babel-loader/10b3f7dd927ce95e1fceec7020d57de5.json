{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\Comments.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar Comments = function Comments(props) {\n  var userId = props.route.params.userId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setuser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  React.useEffect(function () {\n    props.navigation.setOptions({\n      headerTitle: 'user'\n    });\n  }, []);\n  useEffect(function () {\n    getuser();\n  }, []);\n\n  var getuser = function getuser() {\n    fetch(\"http://jsonplaceholder.typicode.com/comments?userId=\" + userId).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return handleResponse1(json);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var handleResponse1 = function handleResponse1(response) {\n    var nameuser = response.map(function (item, index) {\n      return {\n        id: item.id,\n        name: item.name,\n        body: item.body,\n        postId: item.postId\n      };\n    });\n    setuser(response);\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n    console.log(nameuser);\n  };\n\n  if (loading) return React.createElement(ActivityIndicator, {\n    size: 'large',\n    color: 'red',\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, user.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        marginBottom: 30\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"\\\"postId\\\": \", item.postId), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"\\\"id\\\": \", item.id), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"\\\"name\\\": \", item.name), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"\\\"body\\\": \", item.body), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"\\\"email\\\": \", item.email));\n  }));\n};\n\nexport default Comments;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/Comments.tsx"],"names":["React","useEffect","useState","Comments","props","userId","route","params","user","setuser","loading","setLoading","navigation","setOptions","headerTitle","getuser","fetch","then","response","json","handleResponse1","catch","e","console","log","nameuser","map","item","index","id","name","body","postId","setTimeout","marginTop","marginLeft","marginBottom","fontSize","email","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Text, View, ScrollView } from 'react-native'\r\n\r\nconst Comments = (props: any) => {\r\n    const userId = props.route.params.userId\r\n    const [user, setuser] = useState<{ id: number; name: string; body: string; email: string; postId: number; }[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    React.useEffect(() => {\r\n        props.navigation.setOptions({ headerTitle: 'user' })\r\n    }, [])\r\n    useEffect(() => {\r\n        getuser()\r\n    }, [])\r\n\r\n\r\n    const getuser = () => {\r\n\r\n        fetch(\"http://jsonplaceholder.typicode.com/comments?userId=\" + userId)\r\n            .then(response => response.json())\r\n            .then(json => handleResponse1(json))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const handleResponse1 = (response: any[]) => {\r\n        var nameuser = response.map((item, index) => {\r\n            return {\r\n                id: item.id, name: item.name, body: item.body, postId: item.postId\r\n            }\r\n        })\r\n        setuser(response)\r\n        setTimeout(function () { setLoading(false) }, 500);\r\n        console.log(nameuser);\r\n    }\r\n\r\n\r\n    if (loading)\r\n        return <ActivityIndicator size={'large'} color={'red'} style={{ marginTop: 30 }} />\r\n\r\n    return (\r\n        <ScrollView style={{ marginLeft: 10 }}>\r\n            {  user.map((item, index) => {\r\n                return (\r\n                    <View style={{ marginBottom: 30 }} key={index}>\r\n                        <Text style={{ fontSize: 20 }}>\"postId\": {item.postId}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"id\": {item.id}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"name\": {item.name}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"body\": {item.body}</Text>\r\n                        <Text style={{ fontSize: 20 }}>\"email\": {item.email}</Text>\r\n                    </View>)\r\n            }\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}