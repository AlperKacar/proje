{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Monster1\\\\Desktop\\\\proje\\\\screens\\\\Posts.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar Posts = function Posts(props) {\n  var userId = props.route.params.userId;\n  var postId = props.route.params.postId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      post = _useState4[0],\n      setpost = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showComments = _useState8[0],\n      setShowComments = _useState8[1];\n\n  React.useEffect(function () {\n    props.navigation.setOptions({\n      headerTitle: 'POST'\n    });\n  }, []);\n  useEffect(function () {\n    getuser();\n    getpost();\n  }, []);\n\n  var getuser = function getuser() {\n    fetch(\"http://jsonplaceholder.typicode.com/posts?userId=\" + userId).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return handleResponse(json);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var handleResponse = function handleResponse(response) {\n    var nameUser = response.map(function (item, index) {\n      return {\n        id: item.id,\n        title: item.title,\n        body: item.body,\n        userId: item.userId\n      };\n    });\n    setUser(response);\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n    console.log(nameUser);\n  };\n\n  var getpost = function getpost() {\n    fetch(\"http://jsonplaceholder.typicode.com/comments?postId=\" + postId).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return handleResponse1(json);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var handleResponse1 = function handleResponse1(response) {\n    var namepost = response.map(function (item1, index) {\n      return {\n        id: item1.id,\n        name: item1.name,\n        body: item1.body,\n        postId: item1.postId\n      };\n    });\n    setpost(response);\n    console.log(namepost);\n  };\n\n  if (loading) return React.createElement(ActivityIndicator, {\n    size: 'large',\n    color: 'red',\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, user.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        marginBottom: 30\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setShowComments(!showComments);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"\\\"userId\\\": \", item.userId), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"\\\"id\\\": \", item.id), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"\\\"title\\\": \", item.title), React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"\\\"body\\\": \", item.body)), showComments && post.map(function (item1, index) {\n      return React.createElement(View, {\n        style: {\n          marginBottom: 30\n        },\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }, \"\\\"postId\\\": \", item1.postId), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 41\n        }\n      }, \"\\\"id\\\": \", item1.id), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }, \"\\\"name\\\": \", item1.name), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, \"\\\"body\\\": \", item1.body), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 41\n        }\n      }, \"\\\"email\\\": \", item1.email));\n    }));\n  }));\n};\n\nexport default Posts;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Monster1/Desktop/proje/screens/Posts.tsx"],"names":["React","useEffect","useState","Posts","props","userId","route","params","postId","user","setUser","post","setpost","loading","setLoading","showComments","setShowComments","navigation","setOptions","headerTitle","getuser","getpost","fetch","then","response","json","handleResponse","catch","e","console","log","nameUser","map","item","index","id","title","body","setTimeout","handleResponse1","namepost","item1","name","marginTop","marginLeft","marginBottom","fontSize","email","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Text, View, TouchableOpacity, ScrollView } from 'react-native'\r\nimport Comments from \"./Comments\";\r\n\r\nconst Posts = (props: any) => {\r\n    var userId = props.route.params.userId\r\n    var postId = props.route.params.postId\r\n    const [user, setUser] = useState<{ id: number; userId: number; title: string; body: string }[]>([])\r\n    const [post, setpost] = useState<{ id: number; name: string; body: string; email: string; postId: number; }[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showComments, setShowComments] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        props.navigation.setOptions({ headerTitle: 'POST' })\r\n    }, [])\r\n    useEffect(() => {\r\n        getuser()\r\n        getpost()\r\n\r\n    }, [])\r\n\r\n\r\n    const getuser = () => {\r\n\r\n        fetch(\"http://jsonplaceholder.typicode.com/posts?userId=\" + userId)\r\n            .then(response => response.json())\r\n            .then(json => handleResponse(json))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const handleResponse = (response: any[]) => {\r\n        var nameUser = response.map((item, index) => {\r\n            return {\r\n                id: item.id, title: item.title, body: item.body, userId: item.userId\r\n            }\r\n        })\r\n        setUser(response)\r\n        setTimeout(function () { setLoading(false) }, 500);\r\n        console.log(nameUser);\r\n    }\r\n\r\n    const getpost = () => {\r\n\r\n        fetch(\"http://jsonplaceholder.typicode.com/comments?postId=\" + postId)\r\n            .then(response => response.json())\r\n            .then(json => handleResponse1(json))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const handleResponse1 = (response: any[]) => {\r\n        var namepost = response.map((item1, index) => {\r\n            return {\r\n                id: item1.id, name: item1.name, body: item1.body, postId: item1.postId\r\n            }\r\n        })\r\n        setpost(response)\r\n\r\n        console.log(namepost);\r\n    }\r\n\r\n    if (loading)\r\n        return <ActivityIndicator size={'large'} color={'red'} style={{ marginTop: 30 }} />\r\n    //        props.navigation.navigate('comments', { userId: item.id })\r\n    return (\r\n        <ScrollView style={{ marginLeft: 10 }} >\r\n            {  user.map((item, index) => {\r\n                return (\r\n                    <View style={{ marginBottom: 30 }} key={index} >\r\n                        <TouchableOpacity onPress={() => { setShowComments(!showComments) }}>\r\n                            <Text style={{ fontSize: 20 }}>\"userId\": {item.userId}</Text>\r\n                            <Text style={{ fontSize: 20 }}>\"id\": {item.id}</Text>\r\n                            <Text style={{ fontSize: 20 }}>\"title\": {item.title}</Text>\r\n                            <Text style={{ fontSize: 20 }}>\"body\": {item.body}</Text>\r\n                        </TouchableOpacity>\r\n                        {\r\n                            showComments &&\r\n\r\n                            post.map((item1, index) => {\r\n                                return (\r\n                                    <View style={{ marginBottom: 30 }} key={index}>\r\n                                        <Text style={{ fontSize: 20 }}>\"postId\": {item1.postId}</Text>\r\n                                        <Text style={{ fontSize: 20 }}>\"id\": {item1.id}</Text>\r\n                                        <Text style={{ fontSize: 20 }}>\"name\": {item1.name}</Text>\r\n                                        <Text style={{ fontSize: 20 }}>\"body\": {item1.body}</Text>\r\n                                        <Text style={{ fontSize: 20 }}>\"email\": {item1.email}</Text>\r\n                                    </View>)\r\n                            }\r\n                            )\r\n                        }\r\n                    </View>\r\n                )\r\n            }\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}